// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eth.proto

#include "eth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace rpcdaemon {
class GetBlockRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBlockRequest> _instance;
} _GetBlockRequest_default_instance_;
class GetBlockResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBlockResponse> _instance;
} _GetBlockResponse_default_instance_;
class GetTransactionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTransactionRequest> _instance;
} _GetTransactionRequest_default_instance_;
class GetTransactionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTransactionResponse> _instance;
} _GetTransactionResponse_default_instance_;
}  // namespace rpcdaemon
static void InitDefaultsscc_info_GetBlockRequest_eth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcdaemon::_GetBlockRequest_default_instance_;
    new (ptr) ::rpcdaemon::GetBlockRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcdaemon::GetBlockRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBlockRequest_eth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBlockRequest_eth_2eproto}, {}};

static void InitDefaultsscc_info_GetBlockResponse_eth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcdaemon::_GetBlockResponse_default_instance_;
    new (ptr) ::rpcdaemon::GetBlockResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcdaemon::GetBlockResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBlockResponse_eth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBlockResponse_eth_2eproto}, {}};

static void InitDefaultsscc_info_GetTransactionRequest_eth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcdaemon::_GetTransactionRequest_default_instance_;
    new (ptr) ::rpcdaemon::GetTransactionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcdaemon::GetTransactionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTransactionRequest_eth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTransactionRequest_eth_2eproto}, {}};

static void InitDefaultsscc_info_GetTransactionResponse_eth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcdaemon::_GetTransactionResponse_default_instance_;
    new (ptr) ::rpcdaemon::GetTransactionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcdaemon::GetTransactionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTransactionResponse_eth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTransactionResponse_eth_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_eth_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_eth_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_eth_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_eth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, first_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, last_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, step_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, hash_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, hashes_only_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockRequest, include_receipts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetBlockResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionRequest, block_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionRequest, tx_id_),
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionRequest, hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rpcdaemon::GetTransactionResponse, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rpcdaemon::GetBlockRequest)},
  { 11, -1, sizeof(::rpcdaemon::GetBlockResponse)},
  { 17, -1, sizeof(::rpcdaemon::GetTransactionRequest)},
  { 25, -1, sizeof(::rpcdaemon::GetTransactionResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rpcdaemon::_GetBlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rpcdaemon::_GetBlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rpcdaemon::_GetTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rpcdaemon::_GetTransactionResponse_default_instance_),
};

const char descriptor_table_protodef_eth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\teth.proto\022\trpcdaemon\032\034google/api/annot"
  "ations.proto\"y\n\017GetBlockRequest\022\r\n\005first"
  "\030\001 \001(\004\022\014\n\004last\030\003 \001(\004\022\014\n\004step\030\005 \001(\004\022\014\n\004ha"
  "sh\030\007 \001(\t\022\023\n\013hashes_only\030\t \001(\010\022\030\n\020include"
  "_receipts\030\013 \001(\010\"#\n\020GetBlockResponse\022\017\n\007m"
  "essage\030\001 \001(\t\"C\n\025GetTransactionRequest\022\r\n"
  "\005block\030\001 \001(\004\022\r\n\005tx_id\030\003 \001(\004\022\014\n\004hash\030\005 \001("
  "\t\")\n\026GetTransactionResponse\022\017\n\007message\030\001"
  " \001(\t2\254\001\n\nEthService\022E\n\010GetBlock\022\032.rpcdae"
  "mon.GetBlockRequest\032\033.rpcdaemon.GetBlock"
  "Response\"\000\022W\n\016GetTransaction\022 .rpcdaemon"
  ".GetTransactionRequest\032!.rpcdaemon.GetTr"
  "ansactionResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_eth_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_eth_2eproto_sccs[4] = {
  &scc_info_GetBlockRequest_eth_2eproto.base,
  &scc_info_GetBlockResponse_eth_2eproto.base,
  &scc_info_GetTransactionRequest_eth_2eproto.base,
  &scc_info_GetTransactionResponse_eth_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_eth_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_eth_2eproto = {
  false, false, descriptor_table_protodef_eth_2eproto, "eth.proto", 507,
  &descriptor_table_eth_2eproto_once, descriptor_table_eth_2eproto_sccs, descriptor_table_eth_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_eth_2eproto::offsets,
  file_level_metadata_eth_2eproto, 4, file_level_enum_descriptors_eth_2eproto, file_level_service_descriptors_eth_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_eth_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_eth_2eproto)), true);
namespace rpcdaemon {

// ===================================================================

void GetBlockRequest::InitAsDefaultInstance() {
}
class GetBlockRequest::_Internal {
 public:
};

GetBlockRequest::GetBlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpcdaemon.GetBlockRequest)
}
GetBlockRequest::GetBlockRequest(const GetBlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hash(),
      GetArena());
  }
  ::memcpy(&first_, &from.first_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_receipts_) -
    reinterpret_cast<char*>(&first_)) + sizeof(include_receipts_));
  // @@protoc_insertion_point(copy_constructor:rpcdaemon.GetBlockRequest)
}

void GetBlockRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBlockRequest_eth_2eproto.base);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_receipts_) -
      reinterpret_cast<char*>(&first_)) + sizeof(include_receipts_));
}

GetBlockRequest::~GetBlockRequest() {
  // @@protoc_insertion_point(destructor:rpcdaemon.GetBlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlockRequest::ArenaDtor(void* object) {
  GetBlockRequest* _this = reinterpret_cast< GetBlockRequest* >(object);
  (void)_this;
}
void GetBlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBlockRequest& GetBlockRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBlockRequest_eth_2eproto.base);
  return *internal_default_instance();
}


void GetBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcdaemon.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_receipts_) -
      reinterpret_cast<char*>(&first_)) + sizeof(include_receipts_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 first = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          first_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 last = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          last_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 step = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          step_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rpcdaemon.GetBlockRequest.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool hashes_only = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          hashes_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool include_receipts = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          include_receipts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpcdaemon.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 first = 1;
  if (this->first() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_first(), target);
  }

  // uint64 last = 3;
  if (this->last() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_last(), target);
  }

  // uint64 step = 5;
  if (this->step() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_step(), target);
  }

  // string hash = 7;
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpcdaemon.GetBlockRequest.hash");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_hash(), target);
  }

  // bool hashes_only = 9;
  if (this->hashes_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_hashes_only(), target);
  }

  // bool include_receipts = 11;
  if (this->include_receipts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_include_receipts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcdaemon.GetBlockRequest)
  return target;
}

size_t GetBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcdaemon.GetBlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 7;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // uint64 first = 1;
  if (this->first() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_first());
  }

  // uint64 last = 3;
  if (this->last() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_last());
  }

  // uint64 step = 5;
  if (this->step() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_step());
  }

  // bool hashes_only = 9;
  if (this->hashes_only() != 0) {
    total_size += 1 + 1;
  }

  // bool include_receipts = 11;
  if (this->include_receipts() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcdaemon.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcdaemon.GetBlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcdaemon.GetBlockRequest)
    MergeFrom(*source);
  }
}

void GetBlockRequest::MergeFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcdaemon.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.first() != 0) {
    _internal_set_first(from._internal_first());
  }
  if (from.last() != 0) {
    _internal_set_last(from._internal_last());
  }
  if (from.step() != 0) {
    _internal_set_step(from._internal_step());
  }
  if (from.hashes_only() != 0) {
    _internal_set_hashes_only(from._internal_hashes_only());
  }
  if (from.include_receipts() != 0) {
    _internal_set_include_receipts(from._internal_include_receipts());
  }
}

void GetBlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcdaemon.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockRequest::CopyFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcdaemon.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockRequest::IsInitialized() const {
  return true;
}

void GetBlockRequest::InternalSwap(GetBlockRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockRequest, include_receipts_)
      + sizeof(GetBlockRequest::include_receipts_)
      - PROTOBUF_FIELD_OFFSET(GetBlockRequest, first_)>(
          reinterpret_cast<char*>(&first_),
          reinterpret_cast<char*>(&other->first_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBlockResponse::InitAsDefaultInstance() {
}
class GetBlockResponse::_Internal {
 public:
};

GetBlockResponse::GetBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpcdaemon.GetBlockResponse)
}
GetBlockResponse::GetBlockResponse(const GetBlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:rpcdaemon.GetBlockResponse)
}

void GetBlockResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBlockResponse_eth_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBlockResponse::~GetBlockResponse() {
  // @@protoc_insertion_point(destructor:rpcdaemon.GetBlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlockResponse::ArenaDtor(void* object) {
  GetBlockResponse* _this = reinterpret_cast< GetBlockResponse* >(object);
  (void)_this;
}
void GetBlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBlockResponse& GetBlockResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBlockResponse_eth_2eproto.base);
  return *internal_default_instance();
}


void GetBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcdaemon.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rpcdaemon.GetBlockResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpcdaemon.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpcdaemon.GetBlockResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcdaemon.GetBlockResponse)
  return target;
}

size_t GetBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcdaemon.GetBlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcdaemon.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcdaemon.GetBlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcdaemon.GetBlockResponse)
    MergeFrom(*source);
  }
}

void GetBlockResponse::MergeFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcdaemon.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void GetBlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcdaemon.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockResponse::CopyFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcdaemon.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockResponse::IsInitialized() const {
  return true;
}

void GetBlockResponse::InternalSwap(GetBlockResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTransactionRequest::InitAsDefaultInstance() {
}
class GetTransactionRequest::_Internal {
 public:
};

GetTransactionRequest::GetTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpcdaemon.GetTransactionRequest)
}
GetTransactionRequest::GetTransactionRequest(const GetTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hash(),
      GetArena());
  }
  ::memcpy(&block_, &from.block_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_id_) -
    reinterpret_cast<char*>(&block_)) + sizeof(tx_id_));
  // @@protoc_insertion_point(copy_constructor:rpcdaemon.GetTransactionRequest)
}

void GetTransactionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTransactionRequest_eth_2eproto.base);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_id_) -
      reinterpret_cast<char*>(&block_)) + sizeof(tx_id_));
}

GetTransactionRequest::~GetTransactionRequest() {
  // @@protoc_insertion_point(destructor:rpcdaemon.GetTransactionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionRequest::ArenaDtor(void* object) {
  GetTransactionRequest* _this = reinterpret_cast< GetTransactionRequest* >(object);
  (void)_this;
}
void GetTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTransactionRequest& GetTransactionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTransactionRequest_eth_2eproto.base);
  return *internal_default_instance();
}


void GetTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcdaemon.GetTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_id_) -
      reinterpret_cast<char*>(&block_)) + sizeof(tx_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 tx_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tx_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rpcdaemon.GetTransactionRequest.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTransactionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpcdaemon.GetTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 block = 1;
  if (this->block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_block(), target);
  }

  // uint64 tx_id = 3;
  if (this->tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_tx_id(), target);
  }

  // string hash = 5;
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpcdaemon.GetTransactionRequest.hash");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcdaemon.GetTransactionRequest)
  return target;
}

size_t GetTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcdaemon.GetTransactionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 5;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // uint64 block = 1;
  if (this->block() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_block());
  }

  // uint64 tx_id = 3;
  if (this->tx_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tx_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransactionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcdaemon.GetTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcdaemon.GetTransactionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcdaemon.GetTransactionRequest)
    MergeFrom(*source);
  }
}

void GetTransactionRequest::MergeFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcdaemon.GetTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.block() != 0) {
    _internal_set_block(from._internal_block());
  }
  if (from.tx_id() != 0) {
    _internal_set_tx_id(from._internal_tx_id());
  }
}

void GetTransactionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcdaemon.GetTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionRequest::CopyFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcdaemon.GetTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionRequest::IsInitialized() const {
  return true;
}

void GetTransactionRequest::InternalSwap(GetTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTransactionRequest, tx_id_)
      + sizeof(GetTransactionRequest::tx_id_)
      - PROTOBUF_FIELD_OFFSET(GetTransactionRequest, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTransactionResponse::InitAsDefaultInstance() {
}
class GetTransactionResponse::_Internal {
 public:
};

GetTransactionResponse::GetTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpcdaemon.GetTransactionResponse)
}
GetTransactionResponse::GetTransactionResponse(const GetTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:rpcdaemon.GetTransactionResponse)
}

void GetTransactionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTransactionResponse_eth_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetTransactionResponse::~GetTransactionResponse() {
  // @@protoc_insertion_point(destructor:rpcdaemon.GetTransactionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTransactionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionResponse::ArenaDtor(void* object) {
  GetTransactionResponse* _this = reinterpret_cast< GetTransactionResponse* >(object);
  (void)_this;
}
void GetTransactionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTransactionResponse& GetTransactionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTransactionResponse_eth_2eproto.base);
  return *internal_default_instance();
}


void GetTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcdaemon.GetTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rpcdaemon.GetTransactionResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTransactionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpcdaemon.GetTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpcdaemon.GetTransactionResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcdaemon.GetTransactionResponse)
  return target;
}

size_t GetTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcdaemon.GetTransactionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransactionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcdaemon.GetTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTransactionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcdaemon.GetTransactionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcdaemon.GetTransactionResponse)
    MergeFrom(*source);
  }
}

void GetTransactionResponse::MergeFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcdaemon.GetTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void GetTransactionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcdaemon.GetTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionResponse::CopyFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcdaemon.GetTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionResponse::IsInitialized() const {
  return true;
}

void GetTransactionResponse::InternalSwap(GetTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpcdaemon
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rpcdaemon::GetBlockRequest* Arena::CreateMaybeMessage< ::rpcdaemon::GetBlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpcdaemon::GetBlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpcdaemon::GetBlockResponse* Arena::CreateMaybeMessage< ::rpcdaemon::GetBlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpcdaemon::GetBlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpcdaemon::GetTransactionRequest* Arena::CreateMaybeMessage< ::rpcdaemon::GetTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpcdaemon::GetTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpcdaemon::GetTransactionResponse* Arena::CreateMaybeMessage< ::rpcdaemon::GetTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpcdaemon::GetTransactionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
