#   Copyright 2020 The Silkrpc Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

version: 2.1

commands:
  checkout_with_submodules:
    steps:
      - checkout
      - run:
          name: "Update submodules"
          command: |
            git submodule sync
            git submodule update --init --recursive

  lint:
    steps:
      - run:
          name: "Install Linters"
          command: |
            sudo apt-get install -y python3-pip
            sudo pip3 install -r requirements.txt
      - run:
          name: "Run CppLint and PyLint"
          command: ./run_linter.sh

  build:
    steps:
      - run:
          name: "Install GMP"
          command: |
            sudo apt-get update
            sudo apt-get install -y libgmp3-dev
      - run:
          name: "Install gperftools"
          command: |
            sudo apt-get update
            sudo apt-get install -y google-perftools libgoogle-perftools-dev
      - run:
          name: "Install mimalloc"
          command: |
            git clone https://github.com/microsoft/mimalloc
            cd mimalloc
            mkdir -p out/release
            cd out/release
            cmake ../..
            make 
            sudo make install
      - restore_cache:
          name: "Restore Hunter cache"
          key: &hunter-cache-key hunter-{{ .Environment.CIRCLE_JOB }}-{{checksum ".circleci/config.yml"}}-{{checksum "cmake/toolchain.cmake"}}-{{checksum "cmake/Hunter/packages.cmake"}}
      - run:
          name: "Cmake"
          working_directory: ~/build
          command: cmake ../project -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE -DSILKRPC_CLANG_COVERAGE=$CLANG_COVERAGE
      - save_cache:
          name: "Save Hunter cache"
          key: *hunter-cache-key
          paths:
            - ~/.hunter
      - run:
          name: "Build"
          command: cmake --build ~/build -j

  test:
    steps:
      - run:
          name: "Unit Tests"
          working_directory: ~/build
          command: cmd/unit_test

jobs:
  linux-gcc-11:
    environment:
      BUILD_TYPE: Debug
      TOOLCHAIN_FILE: silkworm/cmake/toolchain/cxx20.cmake
      CLANG_COVERAGE: OFF
    machine:
      image: ubuntu-2004:202101-01
    resource_class: xlarge
    steps:
      - run:
          name: "Install GCC"
          command: |
            sudo apt update
            sudo apt -y install gcc-11 g++-11
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 50
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 50
            gcc --version
            g++ --version
      - checkout_with_submodules
      - lint
      - build
      - test

  linux-clang-13-coverage:
    environment:
      BUILD_TYPE: Debug
      TOOLCHAIN_FILE: cmake/clang-libcxx20-fpic.cmake
      CLANG_COVERAGE: ON
    machine:
      image: ubuntu-2204:2022.04.2
    resource_class: large
    steps:
      - run:
          name: "Install Clang"
          command: |
            sudo apt update
            sudo apt -y install clang-13
            sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-13 50
            sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-13 50
            clang-13 --version
            clang++-13 --version
      - run:
          name: "Install LLVM C++ Standard Library" # for C++ standard headers clang does not have
          command: |
            sudo apt update
            sudo apt -y install apt-utils
            sudo apt -y install libc++abi-13-dev
            sudo apt -y install libc++-13-dev
      - checkout_with_submodules
      - build
      - run:
          name: "Unit Tests"
          working_directory: ~/build
          command: |
            cmd/unit_test
            mv default.profraw unit_test.profraw
      - run:
          name: "Coverage"
          working_directory: ~/build
          command: |
            llvm-profdata merge *.profraw -o profdata
            llvm-cov export -instr-profile profdata -format=lcov cmd/unit_test > silkrpc.lcov
      - run:
          name: "Upload to Codecov"
          command: |
            sudo pip3 install --upgrade --quiet --no-cache-dir codecov

            counter=1
            until codecov --required --file ~/build/silkrpc.lcov -X gcov || [ $counter = 5 ]; do
              counter=$((counter+1))
              sleep 1
              echo "Try #$counter..."
            done

workflows:
  version: 2
  silkrpc:
    jobs:
      - linux-gcc-11
      - linux-clang-13-coverage